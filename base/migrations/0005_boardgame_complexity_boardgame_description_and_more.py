# Generated by Django 5.0 on 2024-02-18 13:59

import django.core.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('base', '0004_boardgame_name_deal_buyer_deal_buyertoughts_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='boardgame',
            name='complexity',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='description',
            field=models.TextField(blank=True, max_length=1500, null=True),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='designer',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='duration',
            field=models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(20), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='made',
            field=models.CharField(choices=[('0', 'IRANI'), ('1', 'KHAREJI')], default=0, max_length=1),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='players',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='price',
            field=models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(100000000), django.core.validators.MinValueValidator(10000)]),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='publisher',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='rank',
            field=models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5000), django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='boardgame',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='topics', to='base.topic'),
        ),
        migrations.AddField(
            model_name='deal',
            name='stock',
            field=models.ManyToManyField(blank=True, related_name='stock', to='base.boardgame'),
        ),
        migrations.AddField(
            model_name='topic',
            name='name',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='archive',
            field=models.ManyToManyField(blank=True, related_name='archive', to='base.boardgame'),
        ),
        migrations.AddField(
            model_name='user',
            name='forSale',
            field=models.ManyToManyField(blank=True, related_name='forsale', to='base.boardgame'),
        ),
        migrations.AddField(
            model_name='user',
            name='wishList',
            field=models.ManyToManyField(blank=True, related_name='wishlist', to='base.boardgame'),
        ),
        migrations.AlterField(
            model_name='boardgame',
            name='name',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.RemoveField(
            model_name='deal',
            name='buyer',
        ),
        migrations.AlterField(
            model_name='deal',
            name='buyerToughts',
            field=models.TextField(blank=True, max_length=500, null=True),
        ),
        migrations.AlterField(
            model_name='deal',
            name='sellerToughts',
            field=models.TextField(blank=True, max_length=500, null=True),
        ),
        migrations.AddField(
            model_name='deal',
            name='buyer',
            field=models.ManyToManyField(blank=True, related_name='buyer', to=settings.AUTH_USER_MODEL),
        ),
    ]
